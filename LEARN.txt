Функции на изучение

isset — Определяет, была ли установлена переменная значением отличным от NULL

Integer - это число из множества ℤ = {..., -2, -1, 0, 1, 2, ...}.

ceil — Округляет дробь в большую сторону

floor — Округляет дробь в меньшую сторону

intval — Возвращает целое значение переменной

round — Округляет число типа float

Числа с плавающей точкой (также известные как "float", "double", или "real")

time — Возвращает текущую метку времени Unix

microtime — Возвращает текущую метку времени Unix с микросекундами

date — Форматирует вывод системной даты/времени

mktime — Возвращает метку времени Unix для заданной даты


Конструкция if является одной из наиболее важных во многих языках программирования, в том числе и PHP. Она предоставляет возможность условного выполнения фрагментов кода.

else Часто необходимо выполнить одно выражение, если определенное условие верно, и другое выражение, если условие не верно. Именно для этого else и используется. else расширяет оператор if, чтобы выполнить выражение, в случае если условие в операторе if равно FALSE. 

switch ператор switch подобен серии операторов IF с одинаковым условием. Во многих случаях вам может понадобиться сравнивать одну и ту же переменную (или выражение) с множеством различных значений, и выполнять различные участки кода в зависимости от того, какое значение принимает эта переменная (или выражение).

break break прерывает выполнение текущей структуры for, foreach, while, do-while или switch.

do-while Цикл do-while очень похож на цикл while, с тем отличием, что истинность выражения проверяется в конце итерации, а не в начале. Главное отличие от обычного цикла while в том, что первая итерация цикла do-while гарантированно выполнится (истинность выражения проверяется в конце итерации), тогда как она может не выполниться в обычном цикле while (истинность выражения которого проверяется в начале выполнения каждой итерации, и если изначально имеет значение FALSE, то выполнение цикла будет прервано сразу).

echo — Выводит одну или более строк

chr — Возвращает символ по его коду

explode — Разбивает строку с помощью разделителя

implode — Объединяет элементы массива в строку

print — Выводит строку

!!!!! parse_str — Разбирает строку в переменные   !!!

printf — Выводит отформатированную строку

strip_tags — Удаляет HTML и PHP-теги из строки

trim — Удаляет пробелы (или другие символы) из начала и конца строки

for Цикл for самый сложный цикл в PHP

empty — Проверяет, пуста ли переменная

unset — Удаляет переменную

count — Подсчитывает количество элементов массива или что-то в объекте

Конструкция foreach предоставляет простой способ перебора массивов. Foreach работает только с массивами и объектами, и будет генерировать ошибку при попытке использования с переменными других типов или неинициализированными переменными.


htmlspecialchars — Преобразует специальные символы в HTML-сущности

str_replace — Заменяет все вхождения строки поиска на строку замены

strtolower — Преобразует строку в нижний регистр

strtoupper — Преобразует строку в верхний регистр

substr — Возвращает подстроку, вырезать часть строки

strpos — Возвращает позицию первого вхождения подстроки

stripos — Возвращает позицию первого вхождения подстроки без учета регистра

array_keys — Возвращает все или некоторое подмножество ключей массива

array_values — Выбирает все значения массива

each — Возвращает текущую пару ключ/значение из массива и смещает его указатель

list — Присваивает переменным из списка значения подобно массиву

fopen — Открывает файл или URL

fread — Бинарно-безопасное чтение файла

fwrite — Бинарно-безопасная запись в файл

fclose — Закрывает открытый дескриптор файла

header — Отправка HTTP заголовка, очищает массив get и при F5 данные не будут отправляться
УСТАНАВЛИВАЕТСЯ ДО ВЫВОДА

setcookie — Посылает cookie
УСТАНАВЛИВАЕТСЯ ДО ВЫВОДА

Cookies

PHP прозрачно поддерживает HTTP cookies. Cookies - это механизм хранения данных браузером удаленной машины для отслеживания или идентификации возвращающихся посетителей. Вы можете установить cookies при помощи функций setcookie() или setrawcookie(). Cookies являются частью HTTP-заголовка, поэтому setcookie() должна вызываться до любого вывода данных в броузер. Это то же самое ограничение, которое имеет функция header(). Вы можете использовать функции буферизации вывода, чтобы задержать вывод результатов работы скрипта до того момента, когда будет известно, понадобится ли установка cookies или других заголовков.

Любые cookies, отправленные серверу браузером клиента, будут автоматически включены в суперглобальный массив $_COOKIE, если директива variables_order содержит букву "C". Для назначения нескольких значений одной cookie, просто добавьте [] к её имени.

В зависимости от значения опции register_globals, cookies могут быть представлены обычными PHP-переменными. Однако рекомендуется не полагаться на эту возможность, так как она обычно отключена в целях безопасности. В более ранних версиях также определяется массив $HTTP_COOKIE_VARS, но только когда включена директива track_vars. (Эта директива всегда включена начиная с версии PHP 4.0.3.)

Дополнительная информация, в том числе и особенности реализации браузеров, приведена в описании функций setcookie() и setrawcookie().


session_start — Start new or resume existing session

session_destroy — Destroys all data registered to a session