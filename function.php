<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>function</title>
</head>

<body>
<?PHP 
function arr_max($arr) // Определяем функцию arr_max принимающую один аргумент
{
 // Входящие данные: Массив
 // Исходящие данные: значение элемента в массиве.
 
  // Устанавливаем значение нулевого элемента как максимального
  $max = $arr[0]; 

  for ($i = 1; isset($arr[$i]); $i++) // для каждого элемента массива
    if ($arr[$i] > $max) // проверяем что больше. Текущее значение или максимум
      $max = $arr[$i]; // Если максимум больше, то меняем максимум на новый

    $arr[1] = 95; // Поменяем значение первого элемента массива. Не задумывайтесь почему. Чуть позже увидите.

        // функция возвращает результат. 
        // Результат в данном случае самое большое число в массиве
    return $max;
}

// Закончилось определение функции. Дальше продолжение скрипта.


$ar1 = array(4, 6, 12, 9, '5', 23);
$ar2 = 'dabcjfutZfgh';

echo arr_max($ar1)."<br>\n"; // Выведет 23

echo '$ar1[1]'.$ar1[1]; // выведет 6 (а не 95, помните ту загадочную строку функции?). Получается значение не изменилось 
// Напомним: в одинарных кавычках значения переменных не подставляются

// подумайте над результатами такого вызова:
echo arr_max($ar2);
?>
</body>
</html>